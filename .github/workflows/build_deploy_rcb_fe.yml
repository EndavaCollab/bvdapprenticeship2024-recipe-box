name: Build & Deploy RecipeBox Frontend

on:
    # push:
    #     # branches:
    #     #     - main
    pull_request:
        # branches:
        #     - main

# for logging in w/ azure
permissions:
  id-token: write
  contents: read

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Download and setup node.js
          uses: actions/setup-node@v4
          with:
            node-version: 'lts/*'

        - name: Install bun
          uses: oven-sh/setup-bun@v2
          with:
            bun-version: 'latest'

        - name: Install dependencies using bun (faster)
          run: bun i
          working-directory: ./recipe-box-frontend/src/main/frontend

        - name: Build web app
          run: npm run build
          working-directory: ./recipe-box-frontend/src/main/frontend

        - name: Upload generated bundle as an artifact
          uses: actions/upload-artifact@v4
          with:
            name: production-rcb-fe
            path: ./recipe-box-frontend/target

    deploy:
      runs-on: ubuntu-latest
      environment: deploy # for logging in w/ azure
      needs: build

      steps:
        - name: Login with Azure
          uses: azure/login@v2
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
        - name: Fetch server public IP address
          run: |
            cmd_output=$(az network public-ip show \
              --resource-group apprenticeship-2024-rg \
              --name rcb-public-ip \
              --query "ipAddress" \
              --output tsv 2> ./ip_fetch_error.log) || \
              { \
                echo "Fetching IP Address failed! Please check the error."; \
                cat ./ip_fetch_error.log; \
                exit 1; \
              } \
            
            if [ -z "$cmd_output" ]; then
              echo "Fetching IP Address failed! Please check that the infrastructure was deployed and the query is correct."
              exit 1
            else
              echo "IP_ADDRESS=$cmd_output" > $GITHUB_ENV
              echo "Successfully fetched IP address into IP_ADDRESS"
            fi

        - name: Generate temp SSH private key file
          run: | 
            mkdir ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            chmod 700 ~/.ssh

        - name: Trust server and fetch public key
          run: |
            ssh-keyscan -p 22 $IP_ADDRESS >> ~/.ssh/known_hosts

        - name: Create ssh host
          run: |
            cat >> ~/.ssh/config <<CONTENT
            Host rcb
              HostName $IP_ADDRESS
              User ${{ secrets.SSH_ADMIN_USERNAME }}
              IdentityFile ~/.ssh/id_rsa
            CONTENT

        - name: Install nginx (if not installed)
          run: |
            ssh rcb <<CONTENT

            sudo apt update
            sudo apt install nginx -y

            CONTENT
        
        - name: Create config for nginx if it doesn't already exist
          run: |
            ssh rcb <<CONTENT

            sudo mkdir -p /var/www/${{secrets.DEPLOY_DOMAIN}}/html
            sudo chown -R ${{secrets.SSH_ADMIN_USERNAME}}:${{secrets.SSH_ADMIN_USERNAME}} /var/www/${{secrets.DEPLOY_DOMAIN}}/html
            sudo chmod -R 755 /var/www/${{secrets.DEPLOY_DOMAIN}}
            
            cat <<NGINX
            server {
              listen 80;
              listen [::]:80;

              root /var/www/${{secrets.DEPLOY_DOMAIN}}/html;
              index index.html;

              server_name ${{secrets.DEPLOY_DOMAIN}} www.${{secrets.DEPLOY_DOMAIN}};

              location / {
                try_files $uri $uri/ =404;
              }
            }
            NGINX | sudo tee /etc/nginx/sites-available/${{secrets.DEPLOY_DOMAIN}}

            CONTENT
        - name: Download built site
          uses: actions/download-artifact@v4
          with:
            name: production-rcb-fe
            path: ./rcb-webapp

        - name: Delete old site data (if there is a previous deploy on this instance)
          run: ssh rcb 'sudo rm -rf /var/www/${{secrets.DEPLOY_DOMAIN}}/html/*'

        - name: Move built site to server
          run: scp -r ./rcb-webapp rcb:/var/www/${{secrets.DEPLOY_DOMAIN}}/html

        - name: Restart Nginx
          run : ssh rcb 'sudo systemctl restart nginx'\

        - name: Create / Update DNS Records on domain to point to server (domain)
          uses: everpcpc/cloudflare-dns-action@v1
          with:
            type: "A"
            name: "${{secrets.DEPLOY_DOMAIN}}"
            content: "${{env.IP_ADDRESS}}"
            ttl: 1
            proxied: false
            token: ${{ secrets.CLOUDFLARE_TOKEN }}
            zone: ${{ secrets.CLOUDFLARE_ZONE }}
        
        - name: Create / Update DNS Records on domain to point to server (www.domain)
          uses: everpcpc/cloudflare-dns-action@v1
          with:
            type: "A"
            name: "www.${{secrets.DEPLOY_DOMAIN}}"
            content: "${{env.IP_ADDRESS}}"
            ttl: 1
            proxied: false
            token: ${{ secrets.CLOUDFLARE_TOKEN }}
            zone: ${{ secrets.CLOUDFLARE_ZONE }}

        
# az network public-ip show --resource-group apprenticeship-2024-rg --name rcb-public-ip --query "ipAddress" --output tsv
